{"version":3,"sources":["constants/index.js","components/Buttons/SubmitBtn.js","components/Buttons/SaveBtn.js","components/Sort/index.js","components/Table/index.js","components/Search/index.js","components/Loading/index.js","components/HOCs/withLoading.js","components/App/index.js","serviceWorker.js","index.js"],"names":["DEFAULT_QUERY","SaveBtn","_ref","onClick","_ref$className","className","children","react_default","a","createElement","type","Sort","sortKey","onSort","activeSortKey","sortClass","classNames","button-inline--active","Buttons_SaveBtn","protoTypes","PropTypes","string","isRequired","node","func","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","reverse","POINTS","Table","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isSortReverse","bind","assertThisInitialized","setState","_this$props","onDismiss","_this$state","sortedList","reverseSortedList","style","width","components_Sort","map","item","key","objectID","href","url","title","author","num_comments","points","Component","Search","value","onChange","onSubmit","SubmitBtn","Loading","withLoading","isLoading","rest","objectWithoutProperties","src_components_Loading","App","_isMounted","results","searchKey","searchTerm","needsToSearchTopstories","setSearchTopStories","fetchSearchTopstories","onSearchSubmit","onSearchChange","result","hits","page","prevState","oldHits","updatedHits","concat","toConsumableArray","objectSpread","defineProperty","updateSearchTopStoriesState","_this2","fetch","then","response","json","event","preventDefault","target","id","_results$searchKey","updateHists","filter","_this3","_this$state2","ButtonWithLoading","components_Search","src_components_Table","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d54f0c9.chunk.js","sourcesContent":["export const DEFAULT_QUERY = 'redux';\nexport const DEFAULT_PAGE = 0;\nexport const DEFAULT_HPP = '100';\n\nexport const PATH_BASE = 'https://hn.algolia.com/api/v1';\nexport const PATH_SEARCH = '/search';\nexport const PARAM_SEARCH = 'query=';\nexport const PARAM_PAGE = 'page=';\nexport const PARAM_HPP = 'hitsPerPage=';","//Dependencies\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SaveBtn = ({ onClick, className = '', children, }) => {\n  return (\n    <button\n      onClick={onClick}\n      className={className}\n      type=\"submit\"\n    >\n      {children}\n    </button>\n  );\n}\n\nSaveBtn.propTypes = {\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default SaveBtn;","//Dependencies\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SaveBtn = ({ onClick, className = '', children, }) => {\n  return (\n    <button\n    onClick={onClick}\n    className={className}\n    type=\"button\"\n    >\n      {children}\n    </button>\n  );\n}\n\n\nSaveBtn.propTypes = {\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default SaveBtn;","//Dependencies\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n//Components\nimport { SaveBtn } from '../Buttons';\n\nconst Sort = ({ sortKey, onSort, children, activeSortKey}) => {\n  const sortClass = classNames(\n    'button-inline',\n    { 'button-inline--active': sortKey === activeSortKey }\n  );\n\n  return (\n    <SaveBtn \n      onClick={() => onSort(sortKey)}\n      className={sortClass} \n    > {children} </SaveBtn>\n  );\n}\nSort.protoTypes = {\n  sortKey: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  onSort: PropTypes.func.isRequired,\n  activeSortKey: PropTypes.string.isRequired\n}\n\nexport default Sort;","//Dependencies\nimport React,{Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { sortBy } from 'lodash';\n\n//Components\nimport { SaveBtn } from '../Buttons';\nimport Sort from '../Sort';\n\n//Styles\nimport './index.css';\n\nconst SORTS = {\n  NONE: list => list,\n  TITLE: list => sortBy(list, 'title'),\n  AUTHOR: list => sortBy(list, 'author'),\n  COMMENTS: list => sortBy(list, 'num_comments').reverse(),\n  POINTS: list => sortBy(list, 'points').reverse(),\n};\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sortKey: 'NONE',\n      isSortReverse: false,\n    };\n    this.onSort = this.onSort.bind(this);\n  }\n\n  onSort(sortKey) {\n    const isSortReverse = this.state.sortKey === sortKey &&\n      !this.state.isSortReverse;\n\n    this.setState({ sortKey, isSortReverse });\n  }\n\n  render() {\n    const { list, onDismiss } = this.props;\n    const { sortKey, isSortReverse } = this.state;\n\n    const sortedList = SORTS[sortKey](list);\n    const reverseSortedList = isSortReverse\n      ? sortedList.reverse()\n      : sortedList;\n\n    return (\n      <div className=\"table\">\n\n        <div className=\"table-header\">\n          <span style={{ width: '40%' }}>\n            <Sort\n              sortKey={'TITLE'}\n              onSort={this.onSort}\n              activeSortKey={sortKey}\n            >\n              Title\n            </Sort>\n          </span>\n          <span style={{ width: '30%' }}>\n            <Sort\n              sortKey={'AUTHOR'}\n              onSort={this.onSort}\n              activeSortKey={sortKey}\n            >\n              Author\n            </Sort>\n          </span>\n          <span style={{ width: '10%' }}>\n            <Sort\n              sortKey={'COMMENTS'}\n              onSort={this.onSort}\n              activeSortKey={sortKey}\n            >\n              Comments\n            </Sort>\n          </span>\n          <span style={{ width: '10%' }}>\n            <Sort\n              sortKey={'POINTS'}\n              onSort={this.onSort}\n              activeSortKey={sortKey}\n            >\n              Points\n            </Sort>\n          </span>\n          <span style={{ width: '10%' }}>\n            Archive\n          </span>\n        </div>\n\n        {reverseSortedList.map(item =>\n          <div key={item.objectID} className=\"table-row\">\n            <span style={{ width: '40%' }}>\n              <a href={item.url}>{item.title}</a>\n            </span>\n            <span style={{ width: '30%' }}>{item.author}</span>\n            <span style={{ width: '10%' }}>{item.num_comments}</span>\n            <span style={{ width: '10%' }}>{item.points}</span>\n            <span>\n              <SaveBtn \n                onClick={() => onDismiss(item.objectID)} \n                className=\"button-inline\"\n              >\n                Dismiss\n              </SaveBtn>\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nTable.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      objectID: PropTypes.string.isRequired,\n      author: PropTypes.string,\n      url: PropTypes.string,\n      num_comments: PropTypes.number,\n      points: PropTypes.number,\n    })\n  ).isRequired,\n  onDismiss: PropTypes.func,\n};\n\nexport default Table;","//Dependencies\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n//Components\nimport { SubmitBtn } from '../Buttons';\n\nconst Search = ({ value, onChange, onSubmit, children }) =>\n  <form onSubmit={onSubmit}>\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n    <SubmitBtn className=\"button\">\n      {children}\n    </SubmitBtn>\n  </form>\n\nSearch.propTypes = {\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  children: PropTypes.string.isRequired\n}\n\nexport default Search;","//Dependencies\nimport React from 'react';\n\n//Styles\nimport './index.css';\n\nconst Loading = () => {\n  return(\n    <div className=\"lds\">\n      <h4 > Loading... </h4>\n      <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\n    </div>\n  );\n}\n\nexport default Loading;","//Dependencies\nimport React from 'react';\n\n//Components\nimport Loading from '../Loading';\n\nconst withLoading = (Component) => ({ isLoading, ...rest}) =>\n  isLoading\n    ? <Loading />\n    : <Component {...rest} />\n\nexport default withLoading;","//Dependencies\nimport React, { Component } from 'react';\n\n//Constants\nimport {\n  DEFAULT_QUERY,\n  DEFAULT_PAGE,\n  DEFAULT_HPP,\n\n  PATH_BASE,\n  PATH_SEARCH,\n  PARAM_SEARCH,\n  PARAM_PAGE,\n  PARAM_HPP,\n} from '../../constants';\n\n//Components\nimport { SaveBtn } from '../Buttons';\nimport Table from '../Table';\nimport Search from '../Search';\nimport withLoading from '../HOCs/withLoading'; \n\n//Styles\nimport './index.css';\n\n// HOF prevState\nconst updateSearchTopStoriesState = (hits, page) => (prevState) => {\n  const { searchKey, results } = prevState;\n\n  const oldHits = results && results[searchKey]\n    ? results[searchKey].hits\n    : [];\n\n  const updatedHits = [\n    ...oldHits,\n    ...hits\n  ];\n\n  return {\n    results: {\n      ...results,\n      [searchKey]: { hits: updatedHits, page }\n    },\n    isLoading: false\n  };\n};\n\nclass App extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: DEFAULT_QUERY,\n      isLoading: false,\n    };\n\n    this.needsToSearchTopstories = this.needsToSearchTopstories.bind(this);\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.fetchSearchTopstories = this.fetchSearchTopstories.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n    this.onSearchSubmit= this.onSearchSubmit.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n  }\n\n  needsToSearchTopstories(searchTerm) {\n    return !this.state.results[searchTerm];\n  }\n  \n  setSearchTopStories(result) {\n    const { hits, page } = result;\n    this.setState(updateSearchTopStoriesState(hits, page));\n  }\n\n  fetchSearchTopstories(searchTerm, page) {\n    this.setState({ isLoading: true });\n\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\n      .then(response => response.json())\n      .then(result => this.setSearchTopStories(result));\n  }\n\n  componentDidMount() {\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n    this.fetchSearchTopstories(searchTerm, DEFAULT_PAGE);\n  }\n\n  onSearchSubmit(event) {\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n\n    if (this.needsToSearchTopstories(searchTerm)) {\n      this.fetchSearchTopstories(searchTerm, DEFAULT_PAGE);\n    }\n      \n    event.preventDefault();\n  }\n\n  onSearchChange(event) {\n    this.setState({searchTerm: event.target.value});\n  }\n  \n  onDismiss(id) {\n    const { searchKey, results } = this.state;\n    const { hits, page } = results[searchKey];\n\n    const isNotId = (item) => item.objectID !== id; \n    const updateHists = hits.filter(isNotId);\n\n    this.setState({ \n      results: {\n        ...results,\n         [searchKey]: { hits: updateHists, page }\n      } \n    });\n  }\n\n  render() {\n    const { searchTerm, results, searchKey, isLoading } = this.state;\n\n    const page = (\n      results &&\n      results[searchKey] &&\n      results[searchKey].page\n    ) || 0;\n\n    const list = (\n      results &&\n      results[searchKey] &&\n      results[searchKey].hits\n    ) || [];\n\n    const ButtonWithLoading = withLoading(SaveBtn);\n\n    return (\n      <div className=\"page\">\n        <div className=\"interactions\">\n\n          <Search \n            value={searchTerm}\n            onChange={this.onSearchChange}\n            onSubmit={this.onSearchSubmit}\n          >\n            Search\n          </Search>\n        </div>\n\n        <Table\n          list={list}\n          onDismiss={this.onDismiss}\n        />\n\n        <div className=\"interactions\">\n          <ButtonWithLoading\n          isLoading={isLoading}\n          className=\"button\"\n          onClick={() => this.fetchSearchTopstories(searchKey, page + 1)}\n          >\n          More\n          </ButtonWithLoading>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif (module.hot) {\n  module.hot.accept();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}